# Задача 1
# Примечания: проверить массив [1, 7, 42, 12, 10, 1, 4, 0]

def sum_num(a):
    sum_numbers = 0
    for x in range(len(a)):
        sum_numbers += a[x]
    return sum_numbers

print(sum_num([1, 7, 42, 12, 10, 1, 4, 0]))


# Ответ --->
# 77


# Задача 2
# Примечания: проверить для числа 7 в диапазоне [1, 9]

def check_in_range(number, start_range, end_range):
    for x in range(start_range, end_range):
        if end_range >= number >= start_range:
            return True
        else:
            return False

n = int(input('Введите проверяемое число: '))
s = int(input('Введите начало диапазона: '))
e = int(input('Введите конец диапазона: '))

print(check_in_range(n, s, e))

# Ответ --->
# 77


# Задача 3
# Примечания: проверить для числа 8128

def perfect_number(number):
    div = []
    for x in range(1, number):
        if number > 0 and number % x == 0:
            div.append(x)
    if sum(div) == number:
        return True
    else:
        return False

print(perfect_number(8128))

# Ответ --->
# True


# Задача 4
# Примечания: проверить для числа 1234567899876554321

def palindrome_check(number):
   numbers1 = str(number)
   numbers2 = numbers1[::-1]
   if numbers1 == numbers2:
       return True
   else:
       return False

print(palindrome_check(1234567899876554321))

# Ответ --->
# False


# Задача 5
# Примечания: проверить для числа 123321

def prime_number_check(number):
   div = []
   for x in range(1, number+1):
       if number % x == 0:
           div.append(x)
   if len(div) == 2:
       return True
   else:
       return False

print(prime_number_check(123321))

# Ответ --->
# False


# Задача 6
# Примечания: проверить для числа 10

def fibonacci_number():
    number = int(input())
    fib = [0, 1, 1]
    for x in range(3, number):
        fib.append(fib[x-1]+fib[x-2])
    print(f"Числа Фибоначчи для числа: {fib}\nЧисло Фибоначчи с индексом {number} -> {fib[number - 1]}")

fibonacci_number()

# Ответ --->
# 34
