# Задача 1
# Примечания: -

for x in range(1, 11):
    string = ''
    for y in range(1, 11):
        string += str(x*y) + ' '
    print(string)

# Ответ --->
# Таблица умножения 10*10


# Задача 2
# Примечания: ввести числа 10 и 50

l = int(input())
r = int(input())
count = 0

for x in range(l, r+1):
    for y in range(l, r+1):
        for k in range(l, r+1):
            if x**2 + y**2 == k**2:
                count += 1
                print(f'{x**2}+{y**2}={k**2}')

print(f'Количество подходящих пар: {count}')


# Ответ --->
# 26


# Задача 3
# Примечания: ввести число 300

N = int(input("Введите число: "))
sum_1 = 0
sum_2 = 0

for i in range(1,N):
    # Находим сумму делителей первого числа:
    for dividers_1 in range(1, i):
        if i % dividers_1 == 0:
            sum_1 += dividers_1
    # Проверяем условия задачи:
    for j in range(1,N):
        if i < j:   # Избегаем повторной проверки пар чисел
            if sum_1 == j:  # Проверяем, равна ли сумма собственных делителей числа i числу j
                # Находим сумму делителей второго числа
                for dividers_2 in range(1, j):
                    if j % dividers_2 == 0:
                        sum_2 += dividers_2
                if sum_2 == i:
                    print(f'Дружественные числа в диапазоне от 1 до {N}: {i} и {j}')
                # Обнуляет sum_2 перед переходом к следующему потенциальному дружественному числу j во внешнем цикле.
                sum_2 = 0
    # Обнуляет sum_1 перед переходом к следующему числу i во внешнем цикле
    sum_1 = 0

# Ответ --->
# 220 и 284


# Задача 4
# Примечания: ввести число 300

n = 4
list_of_number = []     # Список в который будем складывать подходящие числа

for q in range(1, 10):  # Первая цифра числа не должна быть нулем, последующие могут
    for w in range(10):
        for e in range(10):
            for r in range(10):
                # Проверка условия числа Армстронга
                number = int(str(q) + str(w) + str(e) + str(r))
                if q**4 + w**4 + e**4 + r**4 == number:
                    list_of_number.append(number)

print(*list_of_number)      # Печать списка с оператором распаковки *

# Ответ --->
# 1634 8208 9474
